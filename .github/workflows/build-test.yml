name: Packaging

on:
  - push

jobs:
  format:                   # key in this job
    name: Check Formatting  # name of the key in this job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"
      - name: Install tox
        run: python -m pip install tox
      - name: Run black
        run: tox -e format -- --diff src test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"
      - name: Install tox
        run: python -m pip install tox
      - name: Run flake8
        run: tox -e lint
  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"
      - name: Install tox
        run: python -m pip install tox
      - name: Run mypy
        run: tox -e typecheck
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - version: "3.10"
            toxenv: "py310"
          - version: "3.9"
            toxenv: "py39"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4.0.0
        with:
          python-version: ${{ matrix.python.version }}
      - name: Install tox
        run: python -m pip install tox
      - name: Run pytest
        run: tox -e ${{ matrix.python.toxenv }}

  build_source_dist:
    name: Build Sources
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"
      - name: Install build
        run: python -m pip install build
      - name: Run build
        run: python -m build --sdist                     # this only build the source
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.tar.gz
      - name: Output File Structure # TODO
        run: ls -R
        working-directory: ./dist/

  build_wheels:
    name: Build Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel
      - name: Build Wheels
        run: python -m cibuildwheel --output-dir wheels  # Build wheels in wheels dir
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./wheels/*.whl
      - name: Output File Structure # TODO
        run: ls -R
        working-directory: ./wheels/

#  publish:
#    name: Publish to PyPI
#    if: startsWith(github.event.ref, 'refs/tags/v')     # Run the job only if triggered by tags start with v
#    needs:                                              # Wait for other jobs
#      - format
#      - lint
#      - typecheck
#      - test
#      - build_source_dist
#      - build_wheels
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/download-artifact@v3
#        name: Download Artifact
#        with:
#          - name: artifact                             # Download all artifacts to a single directory
#            path: ./dist
#      - uses: pypa/gh-action-pypi-publish@1.5.0
#        name: Publish Package Artifact to PyPI         # Publish to PyPI
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_API_TOKEN }}
